#+TITLE: MININIM Settings
#+PROPERTY: header-args :noweb no-export :comments noweb
* COMMENT Copyright Notice
  Copyright © Bruno Félix Rezende Ribeiro <oitofelix@gnu.org>

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 3, or (at your option)
  any later version.

  This program is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see
  <http://www.gnu.org/licenses/>.

* COMMENT Tangle
** =settings.h=

   #+NAME: settings.h
   #+BEGIN_SRC c :tangle settings.h
     #ifndef MININIM_SETTINGS_H
     #define MININIM_SETTINGS_H
     #include "mininim.h"
     <<h_inc>>
     <<h_mac>>
     <<h_exp_data>>
     <<h_exp_func>>
     #endif
   #+END_SRC

** =settings.c=

   #+NAME: settings.c
   #+BEGIN_SRC c :tangle settings.c
     #include "mininim.h"
     <<c_inc>>
     <<c_mac>>
     <<c_proto>>
     <<c_priv_data>>
     <<c_pub_data>>
     <<c_priv_func>>
     <<c_pub_func>>
   #+END_SRC

* Settings setup

  MININIM read settings from files, environment and command line.

#+BEGIN_SRC c :noweb-ref c_pub_func
  void
  settings_setup ()
  {
    define_initial_settings ();

    set_program_name (argv[0]);

    /* glob command line for MinGW */
  #if WINDOWS_PORT
    glob_t gl; memset (&gl, 0, sizeof (gl));
    size_t i;
    for (i = 0; i < argc; i++) {
      repl_str_char (argv[i], ALLEGRO_NATIVE_PATH_SEP, '/');
      glob (argv[i], GLOB_APPEND | GLOB_NOCHECK | GLOB_NOESCAPE
	    | GLOB_PERIOD | GLOB_BRACE | GLOB_NOMAGIC | GLOB_TILDE,
	    NULL, &gl);
    }
    argc = gl.gl_pathc;
    argv = gl.gl_pathv;
  #endif
  }
#+END_SRC

  The function ~settings_setup~ is public and used by the function
  [[file:mininim.org::init][init]].

#+BEGIN_SRC c :noweb-ref h_exp_func
  extern void settings_setup ();
#+END_SRC

#+BEGIN_SRC c :noweb-ref h_exp_data
  extern char **argv;
  extern size_t argc;
#+END_SRC

#+BEGIN_SRC c :noweb-ref c_pub_data
  char **argv;
  size_t argc;
#+END_SRC

* Initial settings
** Audio mode

  #+BEGIN_SRC c :noweb-ref h_exp_data
    extern char *audio_mode;
  #+END_SRC

  #+BEGIN_SRC c :noweb-ref c_pub_data
    char *audio_mode;
  #+END_SRC

** Environment mode

   #+BEGIN_SRC c :noweb-ref h_exp_data
     extern char *env_mode;
   #+END_SRC

   #+BEGIN_SRC c :noweb-ref c_pub_data
     char *env_mode;
   #+END_SRC

** Hue Mode

   #+BEGIN_SRC c :noweb-ref h_exp_data
     extern char *hue_mode;
   #+END_SRC

   #+BEGIN_SRC c :noweb-ref c_pub_data
     char *hue_mode;
   #+END_SRC

** Initial values

   #+BEGIN_SRC c :noweb-ref c_priv_func
     static void
     define_initial_settings ()
     {
       set_string_var (&audio_mode, "SBLAST");
       set_string_var (&env_mode, "DUNGEON");
       set_string_var (&hue_mode, "NONE");
     }
   #+END_SRC
